#include "common.hpp"

typedef int UNDER_TYPE;
typedef foo<UNDER_TYPE> TESTED_TYPE;

int		main(void)
{
	// 700 unordered ints
	TESTED_TYPE shuffled[] = {
		276, 591,   9, 405, 548, 375, 346, 390,   7, 226,
		378, 898, 178, 710, 548, 441, 191, 300, 587, 963,
		147, 886, 932, 288, 477, 141, 779, 450,  95, 531,
		202, 575, 581,  27, 856, 939, 466, 879, 666, 542,
		446, 876, 244, 415, 929, 522, 352,  83, 917, 419,
		166, 867,  87, 446, 835, 991, 108, 187, 627, 262,
		170, 365, 963, 450, 279,  64, 425, 455, 270, 156,
		855, 300,  10, 423, 809, 260, 879, 796, 321, 437,
		 29, 766, 336, 158, 558, 897, 893, 998,  83, 931,
		180, 487, 887, 139,  21, 225, 154, 510, 144, 884,
		756, 483, 708, 316, 538, 961, 990,  89, 563, 229,
		636, 736, 566, 307, 619, 104, 785, 759, 513, 736,
		946, 256, 389, 564, 362, 461, 153, 760, 135, 932,
		835, 752, 527, 689, 426,  63, 921, 378, 525, 643,
		571, 523, 743, 399, 335, 831,  82, 608, 343, 214,
		 51, 808, 150, 352, 454,   2, 204, 196, 775, 631,
		423, 752, 616, 605, 552, 589, 382, 763, 209,  13,
		952, 859, 723, 586, 807, 116, 125, 901, 473, 428,
		902, 669, 369, 842, 213, 738, 278, 193,  88, 830,
		399, 348, 489, 295, 946, 511, 306, 472, 741, 997,
		  3,  67,  16, 299, 814, 492, 148, 474,  67, 346,
		312, 540, 565, 799, 249, 211, 217, 880, 290,  17,
		964, 889, 297,  71, 848, 371, 164, 677, 785, 490,
		728, 373, 505, 794, 187,  47, 749, 698, 508, 278,
		926, 918,  87, 959, 772, 421, 548,  24, 220, 550,
		463, 905, 944, 870, 337, 869, 147, 942, 823, 983,
		637, 933,  24, 571, 395, 887, 206, 271, 917, 363,
		973, 940, 701, 518, 468, 802, 613, 624, 918, 458,
		987, 845, 195, 720, 430, 268, 808, 220, 206, 374,
		634, 290, 984, 132, 854, 898, 678, 810, 682, 108,
		 27, 821, 377, 905, 507, 988, 164, 907, 783,  95,
		136, 254, 349, 587, 719, 805, 149, 277,  98, 320,
		662, 639,   4, 141, 569,  26, 232, 130, 767, 723,
		945, 266, 215, 652,  46, 922, 781, 215, 786, 917,
		212, 334,  54, 990, 298, 489, 404, 679, 270, 890,
		767, 747, 145, 369, 529, 728, 463, 917, 895,  84,
		511, 652, 310, 793, 433, 451, 189, 467, 949, 122,
		438, 799,  35,  88, 154,  18, 675, 781, 274, 330,
		375,  73, 814,  19, 611, 576, 593, 929, 116, 180,
		541, 906,  96, 399, 428, 954, 761, 945, 668, 227,
		440, 748, 926, 235, 977, 450, 512, 793, 335, 368,
		798, 810, 906, 252, 494, 590, 803, 427, 276, 967,
		624, 454, 270, 397, 368,  98, 409,  34, 737, 470,
		422, 149, 514, 257, 781, 559, 901,  90, 337, 373,
		636, 953, 984, 520, 862, 701, 730, 152, 224, 386,
		 92, 231, 336, 482, 406, 155, 451, 418, 560, 226,
		512, 652, 885, 886, 736, 670, 754, 482, 858, 253,
		153, 812, 512, 892, 433,  40, 623, 659, 462, 998,
		276, 277,  40, 515, 115, 708, 167, 617, 288, 660,
		786, 977, 579, 767, 802, 336, 823, 235, 516, 774,
		  5, 934,  19,  58, 636, 262, 637, 447, 423, 783,
		178,  98, 781, 992, 329, 530, 869, 260, 497, 258,
		926,   9, 880, 286, 148, 287, 976, 221,  65, 672,
		405, 114, 656, 784, 471, 840, 839, 933, 320, 144,
		894, 849,  29, 564, 161, 584, 610, 104,  42, 193,
		897, 560, 738, 192, 875, 206, 520, 749,  19, 416,
		945, 410, 560, 177, 552, 833, 365, 162, 857, 768,
		584, 698,  71, 660, 321, 867, 340, 706, 875, 392,
		369, 146,  80, 352, 343, 328, 947, 796, 685, 155,
		312, 304, 982, 572, 886,  99, 157, 779, 307, 809,
		900, 876, 386,  49, 659, 203, 789, 770, 292, 921,
		567, 899, 838, 162, 699,  98, 647,  21, 923, 243,
		268, 129, 893,  30, 168, 194, 783, 235, 278, 424,
		384, 115, 999, 884, 914, 964, 687, 412, 777, 760,
		627, 393, 435, 576, 826, 175, 207, 891, 588, 726,
		847, 941, 241,   7, 852,  44, 906, 239, 421, 592,
		192, 843, 352, 956, 440, 491, 947, 877, 875, 951,
		645, 583, 501, 200, 972, 144, 971, 879, 252, 953,
		669, 942, 865, 686, 335, 237, 889, 639, 748, 839,
		978, 170, 824, 213, 605, 570, 322, 178, 627, 478
	};
	int n = sizeof(shuffled) / sizeof(TESTED_TYPE);
	TESTED_NAMESPACE::list<TESTED_TYPE> lst(shuffled, shuffled + n);
	TESTED_NAMESPACE::list<TESTED_TYPE>::iterator it;
	for (it = lst.begin(); it != lst.end(); ++it)
		it->switchVerbose();
	std::cout << "\t-- LIST CREATED --" << std::endl;
	printSize(lst);

	std::cout << "\t-- SORT --" << std::endl;
	lst.sort();
	printSize(lst);
	return (0);
}
