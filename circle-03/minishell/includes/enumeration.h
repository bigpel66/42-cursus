/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   enumeration.h                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jseo <jseo@student.42seoul.kr>             +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/12/23 14:34:38 by jseo              #+#    #+#             */
/*   Updated: 2022/01/03 14:18:27 by jseo             ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef ENUMERATION_H
# define ENUMERATION_H

/*
** =============================================================================
** Exit Code Definition
** =============================================================================
*/

typedef enum e_exit
{
	VALID = 0,
	GENERAL = 1,
	BUILTIN = 1,
	NOTEXECUTABLE = 126,
	NOTFOUND = 127,
	SIGOFFSET = 128,
	RANGE = 255,
}			t_exit;

/*
** =============================================================================
** RB Tree Node Color Definition
** =============================================================================
*/

typedef enum e_color
{
	RED,
	BLACK,
}					t_color;

/*
** =============================================================================
** AS Tree Syntax Type Definition
** =============================================================================
*/

typedef enum e_type
{
	SCLN = -1,
	PIPE,
	RDR,
	CMD,
}					t_type;

/*
** =============================================================================
** Quote Type Definition
** =============================================================================
*/

typedef enum e_ict
{
	INDEX,
	CONTENT,
	TYPE,
}					t_ict;

/*
** =============================================================================
** Quote Type Definition
** =============================================================================
*/

typedef enum e_quote
{
	OFF,
	SINGLE,
	DOUBLE,
}					t_quote;

/*
** =============================================================================
** Process In or Out Definition
** =============================================================================
*/

typedef enum e_inout
{
	IN,
	OUT
}					t_inout;

#endif
